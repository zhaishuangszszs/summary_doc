读取环境变量的方法：

（1）export命令显示当前系统定义的所有环境变量（echo $PATH命令输出当前的PATH环境变量的值）。
-----PATH可执行程序的搜索目录，可执行程序包括Linux系统命令和用户的应用程序。如果可执行程序的目录不在PATH指定的目录中，执行时需要指定目录。以冒号:分割不同的路径，使用export定义的时候可加双引号也可不加。
（2）env：查看当前用户全部的环境变量。
env|grep 环境变量名：筛选包含的环境变量。
（3）unset 环境变量名：清除指定环境变量。

----------------------------------------------------
在使用 apt-get install 命令进行包安装时，包的维护者通常会确定包的默认安装目录。这是通过在包的构建过程中指定安装路径来完成的。


---------------------------------------------
Linux环境变量配置方法：

（1）export PATH
使用export命令直接修改PATH的值
例如：
export PATH=/home/uusama/mysql/bin:PATH
# 或者把PATH放在前面
export PATH=PATH:/home/uusama/mysql/bin

注意事项：
生效时间：立即生效
生效期限：当前终端有效，窗口关闭后无效
生效范围：仅对当前用户有效
配置的环境变量中不要忘了加上原来的配置，即$PATH部分，避免覆盖原来配置


（2）vim ~/.bashrc（或者vim ~/.profile）
# 在最后一行加上
export PATH=$PATH:/home/uusama/mysql/bin

注意事项：
生效时间：使用相同的用户打开新的终端时生效，或者手动source ~/.bashrc生效
生效期限：永久有效
生效范围：仅对当前用户有效
如果有后续的环境变量加载文件覆盖了PATH定义，则可能不生效

（3）vim /etc/bashrc（或者vim /etc/profile）
# 如果/etc/bashrc文件不可编辑，需要修改为可编辑
chmod -v u+w /etc/bashrc
vim /etc/bashrc
# 在最后一行加上
export PATH=$PATH:/home/uusama/mysql/bin

注意事项：
生效时间：新开终端生效，或者手动source /etc/profile生效
生效期限：永久有效
生效范围：对所有用户有效

（4）vim /etc/environment
# 在最后一行加上
export PATH=$PATH:/home/uusama/mysql/bin

注意事项：

生效时间：新开终端生效，或者手动source /etc/environment生效
生效期限：永久有效
生效范围：对所有用户有效



---------------------------------------------
/etc/profile 文件
​ 此文件为系统的每个用户设置环境信息，当用户第一次登录时，该文件被执行。并从 /etc/profile.d 目录的配置文件中收集 shell 的设置。如果你有对 /etc/profile 有修改的话必须得手动执行 source /etc/profile，修改才会生效，此修改对每个用户都生效。
------------------------------------
/etc/bashrc 文件
​ 为每一个运行终端的用户执行此文件。当终端被打开时，该文件被读取。如果你想对所有的使用终端的用户修改某个配置并在以后打开的终端都生效的话可以修改这个文件，修改这个文件不用重启，重新打开一个终端即可生效。
​Ubuntu没有此文件，与之对应的是 /ect/bash.bashrc。
--------------------------------------------
 /etc/profile.d 目录（推荐）
​ /etc/profile 在每次启动时会执行 /etc/profile.d 下全部的脚本文件。
-------------------------------------------------------------------
每个用户都可使用该文件输入专用于自己使用的 shell 信息，当用户登录时，该文件仅仅执行一次！默认情况下，它设置一些环境变量，执行用户的 ~/ .bashrc 文件。 此文件类似于 /etc/profile，也是需要手动执行 source ~/.profile，修改才会生效，/etc/profile 对所有用户生效，~/.profile 只对当前用户生效。

​ ~/.bash_profile、 ~/.bash_login 和 ~/.profile 文件往往只存在一个，这与Linux的发行版本有关。centos中为 ~/.bash_profile，ubuntu则为 ~/.profile。执行的顺序为：~/.bash_profile > ~/.bash_login > ~/.profile
--------------------------------------------------------------
~/.bashrc 文件
​ 当用户登录时以及每次打开新的Shell时该文件都将被读取。（每个用户都有一个 ~/.bashrc 文件，在用户目录下） 此文件类似于 /etc/bashrc，不需要重启就可以生效，重新打开一个 bash 即可生效，/etc/bashrc 对所有用户新打开的 bash 都生效，但 ~/.bashrc 只对当前用户新打开的 bash 生效。不推荐在里面配置用户专用的环境变量，因为每开一个Shell，该文件都会被读取一次，效率肯定受影响。
------------------------------------------------------------
~/.bash_logout 文件
​ 当每次退出系统(退出 bash shell)时，执行该文件。可把一些清理工作的命令放到这文件中。
----------------------------------------------------------
执行顺序
/etc/profile
/etc/bashrc
/etc/profile.d
~/.bash_profile | ~/.bash_login | ~/.profile
~/.bashrc



